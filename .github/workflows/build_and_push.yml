name: Build and Push

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

env:
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}
  DEFAULT_TAG: "latest"
  IMAGE_NAME: ${{ github.event.repository.name }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build image with Podman
        run: |
          podman build --format docker \
                      -t localhost/${{ env.IMAGE_NAME }}:${{ env.DEFAULT_TAG }} \
                      .

      - name: Generate tags
        id: generate-tags
        shell: bash
        run: |
          BUILD_TAGS=()
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          BUILD_TAGS+=("${{ env.DEFAULT_TAG }}" "$SHORT_SHA")
          echo "Tags for this Action..."
          echo "${BUILD_TAGS[@]}"
          echo "BUILD_TAGS=${BUILD_TAGS[*]}" >> $GITHUB_OUTPUT

      - name: Tag Images
        shell: bash
        run: |
          # Get the local image ID
          IMAGE=$(podman inspect localhost/${{ env.IMAGE_NAME }}:${{ env.DEFAULT_TAG }} | jq -r .[].Id)
          podman untag localhost/${{ env.IMAGE_NAME }}:${{ env.DEFAULT_TAG }}

          # Tag Image
          for tag in ${{ steps.generate-tags.outputs.BUILD_TAGS }}; do
            podman tag "$IMAGE" "localhost/${{ env.IMAGE_NAME }}:${tag}"
          done

          # Show Images
          podman images

      - name: Lowercase Registry
        id: registry_case
        uses: ASzc/change-string-case-action@d0603cd0a7dd490be678164909f65c7737470a7f # v6
        with:
          string: ${{ env.IMAGE_REGISTRY }}

      - name: Log in to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | podman login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push to GHCR
        id: push
        if: github.event_name != 'pull_request'
        uses: Wandalen/wretry.action@e68c23e6309f2871ca8ae4763e7629b9c258e1ea # v3.8.0
        with:
          attempt_limit: 3
          attempt_delay: 15000
          command: |
            set -euox pipefail

            for tag in ${{ steps.generate-tags.outputs.BUILD_TAGS }}; do
              podman push ${{ env.IMAGE_NAME }}:${tag} ${{ steps.registry_case.outputs.lowercase }}/${{ env.IMAGE_NAME }}:${tag}
            done

            digest=$(skopeo inspect docker://${{ steps.registry_case.outputs.lowercase }}/${{ env.IMAGE_NAME }}:${{ env.DEFAULT_TAG }} --format '{{.Digest}}')

            echo "digest=${digest}" >> $GITHUB_OUTPUT